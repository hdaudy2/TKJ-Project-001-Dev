@model StoreMappingSearchModel
@{
    ViewBag.Title = T("Admin.Configuration.StoresMapping").Text;
    NopHtml.SetActiveMenuItemSystemName("Stores Mapping");
}

@{
    const string hideSearchBlockAttributeName = "PollsPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}
<nop-antiforgery-token />

<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.StoresMapping")
    </h1>
    <div class="pull-right">
        <a href="@Url.Action("Create")" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.StoreListButtons })
    </div>
</div>

<div class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>
                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchStoreId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-8 col-md-offset-4">
                                            <button type="button" id="search-StoreMapping" style="margin: 0px; padding: 4px;" class="btn btn-primary btn-search">
                                                <i class="fa fa-search"></i>
                                                @T("Admin.Common.Search")
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card card-default">
                    <div class="card-body">
                        <div class="panel-body">
                            @await Html.PartialAsync("Table", new DataTablesModel
                            {
                                Name = "stores-grid",
                                UrlRead = new DataUrl("List", "StoreMapping", null),
                                SearchButtonId = "search-StoreMapping",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,
                                Filters = new List<FilterParameter>
                                {
                                    new FilterParameter(nameof(Model.SearchStoreId))
                                },
                                ColumnCollection = new List<ColumnProperty>
                                {
                                    new ColumnProperty(nameof(StoreMappingModel.UserName))
                                    {
                                        Title = T("Admin.Configuration.Stores.Fields.UserName").Text
                                    },
                                    new ColumnProperty(nameof(StoreMappingModel.StoreName))
                                    {
                                        Title = T("Admin.Configuration.Stores.Fields.StoreName").Text
                                    },
                                    new ColumnProperty(nameof(StoreMappingModel.StoreUrl))
                                    {
                                        Title = T("Admin.Configuration.Stores.Fields.StoreUrl").Text
                                    },
                                    new ColumnProperty(nameof(StoreMappingModel.EntityName))
                                    {
                                        Title = T("Admin.Configuration.Stores.Fields.EntityName").Text
                                    },
                                    new ColumnProperty(nameof(StoreMappingModel.Id))
                                    {
                                        Title = T("Admin.Common.Edit").Text,
                                        Width = "100",
                                        ClassName =  NopColumnClassDefaults.Button,
                                        Render = new RenderButtonEdit(new DataUrl("Edit"))
                                    }
                                }
                            })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

